---
layout: post
title: "Build a web app with flask"
date: 2021-08-22
categories: journal
tags: [journal]
---

This is a brief note for the course "build python web apps with flask" from [codecademy](https://www.codecademy.com).

# Django vs Flask?
- Django Full-stack web framework that follows the batteries-included approach.
- Flask is more light-weight but as powerful when fully utilized.

# Front-end vs back-end
Front-end of a website 
- consists of HTML, CSS, JavaScript and static assets.
Back-end 
- is largely storing, accessing and manipulating data.
- it often has an API to intereact through HTTP requests and responses.

# Stack?
> The collection of technologies used to create the front-end and back-end of a web application is referred to as a _stack_ 

Two set of stacks:
- MEAN stack: Mongo.DB, Expresss.js, Angular JS, and Node.js
- LAMP stack: Linux, Apache, MySQL and PHP

# HTTP?
Stands for **H**yper**t**ext **T**ransfer **P**rotocol.

# Jinja2?
Jinja2 is the [template engine](https://en.wikipedia.org/wiki/Template_processor) of flask.
It's a cool name.. sounds like "ninja".

## Essential syntax
Embedding a variable into a html is simply done by `{{ that_varibale }}`. If-else statement, for-loop, extension are marked by `{% %}`.

### If else
```jinja2
{% my_list|length > 1%}
{{my_list[1]}}
{% elif my_list|length > 0%}
{{my_list[0]}}
{% else %}}
Nothing to display.
{% endif %}
```
### For loop
```jinja2
<ul>
{% for k, v in my_dict.items() %}
<li> {{ k }} {{ v}} </li>
{% endfor %}
</ul>
```
You see, a lot is similar to python syntax, however if-else and for-loop must be closed by `{% endif %}` and `{% endfor %}`. Why?? While python can tell the end of a for-loop by indentation, html is insensitve to indentation, therefore you need to tell it when an if-else or for-loop ends.
### Block extension
```jinja2
{% extend "base_template.html" }
{% block content %}{% endblock %}
```
While `{% block content %}{% endblock %}` encloses the block in "base_template.html".


